name: cleanup

# Run this workflow when any branch besides master or staging is deleted
on: 
  delete:
    branches-ignore:
      - master
      - staging
 
jobs:    
  deleteArtifacts:
    if: github.event.ref_type == 'branch'
    runs-on: macos-latest
    steps:

    # Install the Realm CLI & authenticate
    - name: "install the realm cli & authenticate"
      run: |
           npm install -g mongodb-realm-cli@beta
           realm-cli login --api-key="${{ secrets.REALM_API_PUBLIC_KEY }}" --private-api-key="${{ secrets.REALM_API_PRIVATE_KEY }}" --realm-url=https://realm.mongodb.com --atlas-url=https://cloud.mongodb.com

    # Store the name of the branch that is being deleted in an environment variable
    - name: "store the name of the branch"
      run: | 
           ref=$(echo ${{ github.event.ref }})
           branch=$(echo "${ref##*/}")
           echo "FEATURE_BRANCH=$branch" >> $GITHUB_ENV

    # Delete the Realm app associated with the branch that is being deleted
    - name: "delete the realm app associated with the branch"
      run: | 
           output=$(mongo "mongodb+srv://${{ secrets.ATLAS_URI_FEATURE_BRANCHES }}/git_metadata" --username ${{ secrets.ATLAS_USERNAME_FEATURE_BRANCHES }} --password ${{ secrets.ATLAS_PASSWORD_FEATURE_BRANCHES }} --eval "db.metadata.findOne({'branch': '${{ env.FEATURE_BRANCH }}'})")

           if [[ $output == *null ]]; then
              echo "No Realm app found for this branch"
           else
              app_id=$(echo $output | sed 's/^.*realm_app_id" : "\([^"]*\).*/\1/')
              echo "A Realm app was found for this branch: $app_id. It will now be deleted"
              realm-cli app delete --app $app_id
              output=$(mongo "mongodb+srv://${{ secrets.ATLAS_URI_FEATURE_BRANCHES }}/git_metadata" --username ${{ secrets.ATLAS_USERNAME_FEATURE_BRANCHES }} --password ${{ secrets.ATLAS_PASSWORD_FEATURE_BRANCHES }} --eval "db.metadata.deleteOne({'branch': '${{ env.FEATURE_BRANCH }}'})")
           fi

    # Delete the database associated with the branch that is being deleted
    - name: "delete the database associated with the branch"
      run: | 
           mongo "mongodb+srv://${{ secrets.ATLAS_URI_FEATURE_BRANCHES }}/feature-${{ env.FEATURE_BRANCH }}" --username ${{ secrets.ATLAS_USERNAME_FEATURE_BRANCHES }} --password ${{ secrets.ATLAS_PASSWORD_FEATURE_BRANCHES }} --eval "db.dropDatabase()"
