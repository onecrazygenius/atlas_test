name: build

on: [push, pull_request]

jobs:    
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      # Checkout the code from the repository

    - name: "store current time in variable"
      run: echo "CURRENT_TIME=$(date +'%Y-%m-%d_%s')" >> $GITHUB_ENV
      # Store the current time in an environment variable for later use

    - name: "is this a push to the master branch?"
      if: ${{ github.ref == 'refs/heads/master' }}
      run: echo "REALM_APP_ID=${{ secrets.REALM_APP_ID_MASTER }}" >> $GITHUB_ENV
      # Set the Realm App ID for the master branch

    - name: "is this a push to the staging branch?"
      if: ${{ github.ref == 'refs/heads/staging' }}
      run: echo "REALM_APP_ID=${{ secrets.REALM_APP_ID_STAGING }}" >> $GITHUB_ENV
      # Set the Realm App ID for the staging branch

    - name: "is this a push to a feature branch?"
      if: ${{ !env.REALM_APP_ID && github.event_name == 'push' }}
      run: | 
           ref=$(echo ${{ github.ref }})
           branch=$(echo "${ref##*/}")
           echo "FEATURE_BRANCH=$branch" >> $GITHUB_ENV
           # Check if a Realm app already exists for this feature branch
           output=$(mongo "mongodb+srv://${{ secrets.ATLAS_URI_FEATURE_BRANCHES }}/git_metadata" --username ${{ secrets.ATLAS_USERNAME_FEATURE_BRANCHES }} --password ${{ secrets.ATLAS_PASSWORD_FEATURE_BRANCHES }} --eval "db.metadata.findOne({'branch': '$branch'})")
           if [[ $output == *null ]]; then
              echo "No Realm app found for this branch. A new app will be pushed later in this workflow"
           else
              echo "A Realm app was found for this branch. Updates will be pushed to the existing app later in this workflow"
              app_id=$(echo $output | sed 's/^.*realm_app_id" : "\([^"]*\).*/\1/')
              echo "REALM_APP_ID=$app_id" >> $GITHUB_ENV
           fi

    - name: "set environment variables for all other runs"
      if: ${{ github.event_name == 'pull_request' }}
      run: | 
           echo "IS_DYNAMICALLY_GENERATED_APP=true" >> $GITHUB_ENV
           # Logic for pull requests

    - name: "install the realm cli & authenticate"
      run: |
           npm install -g mongodb-realm-cli@beta
           realm-cli login --api-key="${{ secrets.REALM_API_PUBLIC_KEY }}" --private-api-key="${{ secrets.REALM_API_PRIVATE_KEY }}" --realm-url https://realm.mongodb.com --atlas-url https://cloud.mongodb.com

    - name: "push updated copy of the realm app for existing apps (master, staging, or feature branches)"
      if: ${{ env.REALM_APP_ID }}
      run: | 
           realm-cli push --remote="${{ env.REALM_APP_ID }}" -y

    - name: "create a new realm app for feature branches where the realm app does not yet exist"
      if: ${{ env.REALM_APP_ID == null && github.event_name == 'push' }}
      run: | 
           realm-cli push -y --project ${{ secrets.ATLAS_PROJECT_ID_FEATURE }}
           output=$(realm-cli app describe)
           app_id=$(echo $output | sed 's/^.*client_app_id": "\([^"]*\).*/\1/')
           echo "REALM_APP_ID=$app_id" >> $GITHUB_ENV
           mongo "mongodb+srv://${{ secrets.ATLAS_URI_FEATURE_BRANCHES }}/git_metadata" --username ${{ secrets.ATLAS_USERNAME_FEATURE_BRANCHES }} --password ${{ secrets.ATLAS_PASSWORD_FEATURE_BRANCHES }} --eval "db.metadata.insertOne({'branch': '${{ env.FEATURE_BRANCH}}', 'realm_app_id': '$app_id'})"

    - name: "create a new realm app for pull requests"
      if: ${{ github.event_name == 'pull_request' }}
      run: | 
           realm-cli push -y --project ${{ secrets.ATLAS_PROJECT_ID_PR }}
           output=$(realm-cli app describe)
           app_id=$(echo $output | sed 's/^.*client_app_id": "\([^"]*\).*/\1/')
           echo "REALM_APP_ID=$app_id" >> $GITHUB_ENV

    - name: "delete dynamically generated realm app"
      if: ${{ env.IS_DYNAMICALLY_GENERATED_APP }}
      run: realm-cli app delete --app ${{ env.REALM_APP_ID }}

    - name: "delete dynamically generated database"
      if: ${{ env.IS_DYNAMICALLY_GENERATED_APP }}
      run: |
           mongo "mongodb+srv://${{ secrets.ATLAS_URI_PULL_REQUESTS }}/InventoryDemo-${{ env.CURRENT_TIME }}" --username ${{ secrets.ATLAS_USERNAME_PULL_REQUESTS }} --password ${{ secrets.ATLAS_PASSWORD_PULL_REQUESTS }} --eval "db.dropDatabase()"


